Program CGA160;
 uses CRT;


(*

Bit 76543210
    ||||||||
    |||||^^^-fore colour
    ||||^----fore colour bright bit
    |^^^-----back colour
    ^--------back colour bright bit OR enables blinking Text

*)
const

(* Turbo Pascal, Width= 50 Height= 47 Colors= 256 *)

rballs256 : Array[1..2356] of Byte = (
          $31,$00,$2E,$00,$00,$00,$00,$00,$00,$00,$00,$00,
          $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
          $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
          $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
          $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
          $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
          $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
          $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
          $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
          $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
          $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
          $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
          $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
          $00,$00,$01,$01,$01,$00,$00,$00,$00,$00,$00,$00,
          $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
          $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
          $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
          $00,$00,$01,$01,$01,$01,$01,$01,$01,$00,$00,$00,
          $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
          $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$0B,
          $0B,$0B,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
          $00,$00,$00,$00,$01,$01,$01,$01,$01,$01,$01,$00,
          $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
          $00,$00,$00,$00,$00,$00,$00,$0C,$0C,$0C,$00,$0B,
          $0B,$0B,$0B,$0B,$0B,$0B,$00,$00,$00,$00,$00,$00,
          $00,$00,$00,$00,$00,$01,$01,$01,$01,$01,$01,$01,
          $01,$01,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
          $00,$00,$00,$00,$00,$00,$0D,$0D,$0D,$0C,$0C,$0C,
          $0C,$0B,$0B,$0B,$0B,$0B,$0B,$0B,$00,$00,$00,$00,
          $00,$00,$00,$00,$00,$00,$00,$01,$01,$01,$01,$01,
          $01,$01,$01,$01,$00,$00,$00,$00,$00,$00,$00,$00,
          $00,$00,$00,$00,$00,$00,$0D,$0D,$0D,$0D,$0D,$0D,
          $0D,$0C,$0C,$0C,$0B,$0B,$0B,$0B,$0B,$0B,$0B,$00,
          $00,$00,$00,$00,$00,$00,$00,$00,$00,$01,$01,$01,
          $01,$01,$01,$01,$01,$01,$00,$00,$00,$00,$00,$00,
          $00,$00,$00,$00,$00,$00,$00,$00,$0D,$0D,$0D,$0D,
          $0D,$0D,$0D,$0C,$0C,$0C,$0B,$0B,$0B,$0B,$0B,$0B,
          $0B,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
          $01,$01,$01,$01,$01,$01,$01,$00,$00,$00,$00,$00,
          $00,$00,$00,$00,$00,$00,$00,$00,$00,$0D,$0D,$0D,
          $0D,$0D,$0D,$0D,$0D,$0D,$0C,$0C,$0B,$0B,$0B,$0B,
          $0B,$0B,$0B,$0A,$0A,$00,$00,$00,$00,$00,$00,$00,
          $00,$00,$01,$01,$01,$01,$01,$01,$01,$00,$00,$00,
          $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$0D,
          $0D,$0D,$0D,$0D,$0D,$0D,$0D,$0D,$0C,$0B,$0B,$0B,
          $0B,$0B,$0B,$0B,$0A,$0A,$0A,$00,$00,$00,$00,$00,
          $00,$00,$00,$00,$00,$00,$01,$01,$02,$02,$02,$02,
          $02,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
          $00,$0D,$0E,$0E,$0E,$0D,$0D,$0D,$0D,$0D,$00,$0B,
          $0B,$0B,$0B,$0B,$0B,$0B,$0A,$0A,$0A,$0A,$00,$00,
          $00,$00,$00,$00,$00,$00,$00,$00,$00,$02,$02,$02,
          $02,$02,$02,$02,$00,$00,$00,$00,$00,$00,$00,$00,
          $00,$00,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0D,$0D,$00,
          $00,$00,$00,$0B,$0B,$0B,$0A,$0A,$0A,$0A,$0A,$0A,
          $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$02,$02,
          $02,$02,$02,$02,$02,$02,$02,$00,$00,$00,$00,$00,
          $00,$00,$00,$00,$0E,$0E,$0E,$0E,$0E,$0E,$0E,$0D,
          $0D,$00,$00,$00,$00,$0A,$0A,$0A,$0A,$0A,$0A,$0A,
          $0A,$0A,$00,$00,$00,$00,$00,$00,$00,$00,$00,$02,
          $02,$02,$02,$02,$02,$02,$02,$02,$02,$02,$00,$00,
          $00,$00,$00,$00,$00,$0E,$0E,$0E,$0E,$0E,$0E,$0E,
          $0E,$0E,$00,$00,$00,$00,$00,$00,$0A,$0A,$0A,$0A,
          $0A,$0A,$0A,$09,$00,$00,$00,$00,$00,$00,$00,$00,
          $00,$02,$02,$02,$02,$02,$02,$02,$02,$02,$02,$02,
          $00,$00,$00,$00,$00,$00,$00,$0E,$0E,$0E,$0E,$0E,
          $0E,$0E,$0E,$0E,$00,$00,$00,$00,$00,$00,$0A,$0A,
          $0A,$0A,$0A,$0A,$0A,$09,$09,$00,$00,$00,$00,$00,
          $00,$00,$00,$02,$02,$02,$02,$02,$02,$02,$02,$02,
          $02,$02,$00,$00,$00,$00,$00,$00,$00,$0E,$0E,$0E,
          $0F,$0F,$0F,$0F,$0F,$0E,$00,$00,$00,$00,$00,$00,
          $00,$09,$0A,$0A,$0A,$09,$09,$09,$09,$09,$00,$00,
          $00,$00,$00,$00,$00,$02,$02,$02,$02,$02,$02,$02,
          $02,$02,$02,$02,$00,$00,$00,$00,$00,$00,$00,$00,
          $0E,$0F,$0F,$0F,$0F,$0F,$0F,$0F,$00,$00,$00,$00,
          $00,$00,$09,$09,$09,$09,$09,$09,$09,$09,$09,$09,
          $09,$00,$00,$00,$00,$00,$00,$02,$02,$02,$02,$02,
          $02,$02,$03,$03,$03,$03,$03,$00,$00,$00,$00,$00,
          $00,$00,$0F,$0F,$0F,$0F,$0F,$0F,$0F,$0F,$0F,$00,
          $00,$00,$00,$00,$09,$09,$09,$09,$09,$09,$09,$09,
          $09,$09,$09,$00,$00,$00,$00,$00,$00,$00,$02,$02,
          $02,$02,$02,$03,$03,$03,$03,$03,$03,$03,$00,$00,
          $00,$00,$00,$0F,$0F,$0F,$0F,$0F,$0F,$0F,$0F,$0F,
          $0F,$0F,$00,$00,$00,$00,$09,$09,$09,$09,$09,$09,
          $09,$09,$09,$09,$09,$00,$00,$00,$00,$00,$00,$00,
          $00,$02,$02,$02,$03,$03,$03,$03,$03,$03,$03,$03,
          $03,$00,$00,$00,$00,$0F,$0F,$0F,$0F,$0F,$0F,$0F,
          $0F,$0F,$0F,$0F,$00,$00,$00,$00,$09,$09,$09,$09,
          $09,$09,$09,$09,$09,$09,$09,$00,$00,$00,$00,$00,
          $00,$00,$00,$00,$02,$03,$03,$03,$03,$03,$03,$03,
          $03,$03,$04,$04,$04,$04,$04,$0F,$0F,$0F,$0F,$0F,
          $0F,$0F,$0F,$0F,$0F,$0F,$00,$00,$00,$00,$09,$09,
          $09,$09,$09,$09,$09,$09,$09,$09,$09,$00,$00,$00,
          $00,$00,$00,$00,$00,$00,$00,$03,$03,$03,$03,$03,
          $03,$03,$03,$04,$04,$04,$04,$04,$04,$0F,$0F,$0F,
          $0F,$0F,$0F,$0F,$0F,$0F,$0F,$0F,$00,$00,$00,$00,
          $00,$09,$09,$09,$09,$09,$09,$09,$09,$09,$00,$00,
          $00,$00,$00,$00,$00,$00,$00,$00,$00,$03,$03,$03,
          $03,$03,$03,$03,$04,$04,$04,$04,$04,$04,$04,$0F,
          $0F,$0F,$0F,$0F,$0F,$0F,$0F,$0F,$0F,$0F,$00,$00,
          $00,$00,$00,$00,$09,$09,$09,$09,$09,$09,$09,$00,
          $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$03,
          $03,$03,$03,$03,$03,$04,$04,$04,$04,$04,$04,$04,
          $04,$04,$0F,$0F,$0F,$0F,$0F,$0F,$0F,$0F,$0F,$00,
          $00,$00,$00,$00,$00,$00,$00,$09,$09,$09,$09,$09,
          $08,$08,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
          $00,$03,$03,$03,$03,$03,$04,$04,$04,$04,$04,$04,
          $04,$04,$04,$04,$04,$0F,$0F,$0F,$0F,$0F,$0F,$0F,
          $00,$00,$00,$00,$00,$00,$00,$00,$08,$08,$08,$08,
          $08,$08,$08,$08,$08,$00,$00,$00,$00,$00,$00,$00,
          $00,$00,$00,$00,$03,$03,$03,$03,$04,$04,$04,$04,
          $04,$04,$04,$04,$04,$04,$04,$04,$0F,$0F,$0F,$0F,
          $0F,$00,$00,$00,$00,$00,$00,$00,$00,$08,$08,$08,
          $08,$08,$08,$08,$08,$08,$08,$08,$00,$00,$00,$00,
          $00,$00,$00,$00,$00,$00,$00,$03,$03,$03,$04,$04,
          $04,$04,$04,$04,$04,$04,$04,$04,$04,$04,$04,$00,
          $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$08,
          $08,$08,$08,$08,$08,$08,$08,$08,$08,$08,$00,$00,
          $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$03,$03,
          $04,$04,$04,$04,$04,$04,$04,$04,$04,$04,$04,$05,
          $05,$05,$05,$05,$00,$00,$00,$00,$00,$00,$00,$00,
          $00,$08,$08,$08,$08,$08,$08,$08,$08,$08,$08,$08,
          $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
          $00,$00,$04,$04,$04,$04,$04,$04,$04,$04,$04,$04,
          $05,$05,$05,$05,$05,$05,$05,$00,$00,$00,$00,$00,
          $00,$00,$00,$08,$08,$08,$08,$08,$08,$08,$08,$08,
          $08,$08,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
          $00,$00,$00,$00,$00,$04,$04,$04,$04,$04,$04,$04,
          $04,$05,$05,$05,$05,$05,$05,$05,$05,$05,$00,$00,
          $00,$00,$00,$00,$00,$08,$08,$08,$08,$08,$08,$08,
          $08,$08,$08,$08,$00,$00,$00,$00,$00,$00,$00,$00,
          $00,$00,$00,$00,$00,$00,$00,$00,$04,$04,$04,$04,
          $04,$04,$05,$05,$05,$05,$05,$05,$05,$05,$05,$05,
          $05,$00,$00,$00,$00,$00,$00,$00,$08,$08,$08,$08,
          $08,$08,$08,$08,$08,$00,$00,$00,$00,$00,$00,$00,
          $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$04,
          $04,$04,$04,$05,$05,$05,$05,$05,$05,$05,$05,$05,
          $05,$05,$05,$06,$06,$06,$06,$06,$00,$07,$07,$08,
          $08,$08,$08,$08,$08,$08,$00,$00,$00,$00,$00,$00,
          $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
          $00,$00,$04,$04,$04,$05,$05,$05,$05,$05,$05,$05,
          $05,$05,$05,$05,$06,$06,$06,$06,$06,$06,$07,$07,
          $07,$07,$08,$08,$08,$08,$08,$00,$00,$00,$00,$00,
          $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
          $00,$00,$00,$00,$00,$00,$00,$05,$05,$05,$05,$05,
          $05,$05,$05,$05,$05,$06,$06,$06,$06,$06,$06,$07,
          $07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$00,$00,
          $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
          $00,$00,$00,$00,$00,$00,$00,$00,$00,$05,$05,$05,
          $05,$05,$05,$05,$05,$05,$06,$06,$06,$06,$06,$06,
          $06,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,$07,
          $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
          $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$05,
          $05,$05,$05,$05,$05,$05,$05,$05,$06,$06,$06,$06,
          $06,$06,$06,$07,$07,$07,$07,$07,$07,$07,$07,$07,
          $07,$07,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
          $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
          $00,$00,$05,$05,$05,$05,$05,$05,$05,$05,$06,$06,
          $06,$06,$06,$06,$06,$07,$07,$07,$07,$07,$07,$07,
          $07,$07,$07,$07,$00,$00,$00,$00,$00,$00,$00,$00,
          $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
          $00,$00,$00,$00,$00,$05,$05,$05,$05,$05,$05,$05,
          $06,$06,$06,$06,$06,$06,$06,$07,$07,$07,$07,$07,
          $07,$07,$07,$07,$07,$07,$00,$00,$00,$00,$00,$00,
          $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
          $00,$00,$00,$00,$00,$00,$00,$00,$05,$05,$05,$05,
          $05,$05,$06,$06,$06,$06,$06,$06,$06,$06,$07,$07,
          $07,$07,$07,$07,$07,$07,$07,$00,$00,$00,$00,$00,
          $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
          $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$05,
          $05,$05,$05,$05,$00,$06,$06,$06,$06,$06,$06,$06,
          $06,$07,$07,$07,$07,$07,$07,$07,$00,$00,$00,$00,
          $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
          $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
          $00,$00,$00,$00,$00,$00,$00,$00,$06,$06,$06,$06,
          $06,$06,$06,$00,$07,$07,$07,$07,$07,$00,$00,$00,
          $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
          $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
          $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$06,
          $06,$06,$06,$06,$00,$00,$00,$00,$00,$00,$00,$00,
          $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
          $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
          $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
          $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
          $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
          $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
          $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
          $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
          $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
          $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
          $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
          $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
          $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
          $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
          $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
          $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
          $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
          $00,$00,$00,$00);



Type
 TA = Record
       ch   : char;
       attr : byte;
     end;
Var
 Buffer : array[0..99,0..79] of TA Absolute $0B800:$0;


procedure SetMode(mode : integer); assembler;
asm
  mov ax, mode
  int $10
end;


procedure InitModevga; assembler;
asm
  mov dx, $3D4
  mov al, $09
  out dx, al
  mov dx, $3D5
  mov al, 3
  out dx, al
end;

procedure InitModeCGA; assembler;
asm
  mov ax, $03
  int $10

  mov dx, $3D8
  mov al, 1
  out dx, al
end;


Const
  CRTCa = $3d8;  (*	  6845 mode control register      *)
  CRTCb = $3d4;  (*   6845 index register             *)
  SR	  = $3da;	 (*   Input Status Register           *)
  TEXT  = $03;   (*   DOS video mode for 80x25 text   *)

procedure write_crtc( portn : word;  reg : byte; val : byte);
begin
  PORT[portn]:= reg;
  PORT[portn+1]:=val;
end;


procedure disableBlinkCGA;
begin
  write_crtc(CRTCb,$04,$7f);
  write_crtc(CRTCb,$06,$64);
  write_crtc(CRTCb,$07,$70);
  write_crtc(CRTCb,$09,$01);
  port[CRTCa]:=9;
end;

procedure disableBlinkVGA; assembler;
asm
	mov dx, $03DA
	in al, dx
	mov dx, $03C0
	mov al, $30
	out dx, al
	inc dx
	in al, dx
	and al, $F7
	dec dx
	out dx, al
end;


function ColorATTR(FCol,BCol : Byte) : byte;
begin
 ColorATTR:=(BCol SHL 4) OR (FCol AND $0F);
end;

function BColor(attr : byte) : byte;
begin
  attr:=attr SHR 4;
  BColor:=attr;
end;

function FColor(attr : byte) : byte;
begin
  attr:=attr shl 4;
  FColor:=attr shr 4;
end;



function GetPixel(x,y : integer) : integer;
var
 xpl : integer;
 myta : TA;
 bc,fc : byte;
begin
 if x = 158 then write(#7);
 xpl:=x div 2;
 myta:=Buffer[y,xpl];
 bc:=BColor(myta.attr);
 fc:=FColor(myta.attr);
 if odd(x) then
 begin
  GetPixel:=bc;
 end
 else
 begin
  GetPixel:=fc;
 end;
end;

function GetPixel2(x,y : integer) : integer;
var
 xpl : integer;
 myta : TA;
 bc,fc : byte;
begin
 xpl:=x div 2;
 myta:=Buffer[y,xpl];
 bc:=BColor(myta.attr);
 fc:=FColor(myta.attr);
 if odd(x) then
 begin
  GetPixel2:=fc;
 end
 else
 begin
  GetPixel2:=bc;
 end;
end;



function GetATTR(x,y : integer) : integer;
var
 xpl : integer;
 myta : TA;
 bc,fc : byte;
begin
 xpl:=x div 2;
 GetATTR:=Buffer[y,xpl].attr;
end;

function GetATTR2(x,y : integer) : integer;
var
 xpl : integer;
 myta : TA;
 bc,fc : byte;
begin
 xpl:=x div 2;
 GetATTR2:=Buffer[y,xpl].attr;
end;


procedure putpixel(x,y,c : byte);
var
 xpl    : integer;
 attr   : byte;
 bc,fc  : byte;
 mychar : TA;

begin
 xpl:=x div 2;
 mychar:=buffer[y,xpl];
 bc:=BColor(mychar.attr);
 fc:=FColor(mychar.attr);

 if odd(x) then     (*  0 is even modify left pixel in char *)
 begin
  bc:=c;
 end              (* modify right pixel in char *)
 else
 begin
  fc:=c;
 end;
 mychar.ch:=#221;
 mychar.attr:=ColorATTR(fc,bc);
 buffer[y,xpl]:=mychar;
end;

procedure ClearScreen(c : integer);
var
  i,j   : integer;
  myta  : TA;
begin
 myta.attr:=ColorATTR(c,c);
 myta.ch:=#221;

 for j:=0 to 99 do
 begin
   for i:=0 to 159 do
   begin
      buffer[j,i]:=myta;
   end;
 end;
end;
procedure rectangle(x,y,x2,y2,c : integer);
var
 i,j : integer;
begin
 for j:=y to y2 do
 begin
   for i:=x to x2 do
   begin
     PutPixel(i,j,c);
   end;
 end;
end;


procedure PutImage(x,y : integer;Var Image);
type
 ImgRec = Record
            x,y : integer;
            Buf : array[0..10000] of byte;
          end;
var
 ImgPtr : ^ImgRec;
 i,j,c  : integer;
begin
 c:=0;
 ImgPtr :=@Image;
 for j:=0 to ImgPtr^.y do
 begin
   for i:=0 to ImgPtr^.x do
   begin
     PutPixel(x+i,y+j,ImgPtr^.buf[c]);
     inc(c);
   end;
 end;
end;

var
i,j : integer;

begin
clrscr;
(*TextMode(co80);
Setmode(3);*);

InitModeCGA;
DisableblinkCGA;
clearscreen(blue);

for i:=0 to 15 do
begin
   rectangle(20,5+i*3,80,5+i*3+3,i);
end;

(*PutImage(10,10,rockt256);*)
PutImage(70,0,rballs256);

readln;
TextMode(co80);
end.
