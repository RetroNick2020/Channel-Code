DECLARE SUB transput (x%, y%, image%(), TColor%)

DEFINT A-Z
OPTION BASE 1

DIM robot(242)
DIM boxes(1000)

FOR i = 1 TO 242
 READ robot(i)
NEXT

SCREEN 13

LINE (0, 0)-(319, 199), 2, BF
PUT (10, 20), robot, PSET

LINE (0, 0)-(10, 10), 3, B       
LINE (5, 5)-(15, 15), 4, B       
GET (0, 0)-(15, 15), boxes       

LINE (0, 0)-(319, 199), 1, BF  'switch background  
PUT (20, 0), boxes, PSET       
CALL transput(80, 0, boxes(), 2)                   

FOR i = 0 TO 15
LINE (0, 20 + i)-(319, 20 + i + 1), i, BF
NEXT i

PUT (10, 20), robot, PSET
CALL transput(40, 20, robot(), 0)
CALL transput(80, 20, boxes(), 2)

'  QuickBASIC\QB64, Array Size= 242 Width= 20 Height= 24 Colors= 256
'  robot

DATA &H00A0,&H0018,&H0000,&H0000,&H0000,&H0000,&H0000,&H0000
DATA &H0000,&H0000,&H0000,&H0000,&H0000,&H0000,&H0000,&H0C00
DATA &H0C0C,&H0C0C,&H0000,&H0900,&H0009,&H0000,&H0000,&H0000
DATA &H0000,&H0C00,&H0C0C,&H0C0C,&H0000,&H0900,&H0009,&H0000
DATA &H0000,&H0000,&H0000,&H0C00,&H0C0C,&H0C0C,&H0000,&H0900
DATA &H0009,&H0000,&H0000,&H0000,&H0000,&H0000,&H0900,&H0000
DATA &H0000,&H0900,&H0009,&H0000,&H0000,&H0000,&H0000,&H0000
DATA &H0900,&H0000,&H0000,&H0900,&H0009,&H0000,&H0000,&H0900
DATA &H0909,&H0909,&H0909,&H0909,&H0909,&H0909,&H0009,&H0000
DATA &H0000,&H0900,&H0909,&H0909,&H0909,&H0909,&H0909,&H0909
DATA &H0009,&H0000,&H0000,&H0900,&H0009,&H0909,&H0909,&H0909
DATA &H0009,&H0000,&H0000,&H0000,&H0000,&H0900,&H0009,&H0909
DATA &H0909,&H0909,&H0009,&H0000,&H0000,&H0000,&H0000,&H0900
DATA &H0009,&H0909,&H0909,&H0909,&H0009,&H0000,&H0000,&H0000
DATA &H0000,&H0900,&H0009,&H0909,&H0909,&H0909,&H0009,&H0000
DATA &H0000,&H0000,&H0000,&H0000,&H0000,&H0909,&H0909,&H0909
DATA &H0009,&H0000,&H0000,&H0000,&H0000,&H0000,&H0000,&H0C00
DATA &H0C0C,&H0C0C,&H0000,&H0000,&H0000,&H0000,&H0000,&H0000
DATA &H0000,&H0909,&H0009,&H0909,&H0009,&H0000,&H0000,&H0000
DATA &H0000,&H0000,&H0000,&H0909,&H0009,&H0909,&H0009,&H0000
DATA &H0000,&H0000,&H0000,&H0000,&H0000,&H0909,&H0009,&H0909
DATA &H0009,&H0000,&H0000,&H0000,&H0000,&H0000,&H0000,&H0909
DATA &H0009,&H0909,&H0009,&H0000,&H0000,&H0000,&H0000,&H0000
DATA &H0000,&H0909,&H0009,&H0909,&H0009,&H0000,&H0000,&H0000
DATA &H0000,&H0000,&H0000,&H0909,&H0009,&H0909,&H0009,&H0000
DATA &H0000,&H0000,&H0000,&H0000,&H0000,&H0909,&H0009,&H0909
DATA &H0009,&H0000,&H0000,&H0000,&H0000,&H0000,&H0000,&H0C0C
DATA &H000C,&H0C0C,&H000C,&H0000,&H0000,&H0000,&H0000,&H0000
DATA &H0000,&H0000,&H0000,&H0000,&H0000,&H0000,&H0000,&H0000
DATA &H0000,&H0000,&H0000,&H0000,&H0000,&H0000,&H0000,&H0000
DATA &H0000,&H0000

SUB transput (x, y, image(), TColor)
w = image(1) / 8  'width divide by 8 to get correct size
h = image(2)      'height is correct
c = 0
ic = 4
imgseg = VARSEG(image(1))
FOR j = y TO (y + h - 1)
  FOR i = x TO (x + w - 1)
      DEF SEG = imgseg
      pix1 = PEEK(ic)
      pix2 = PEEK(ic + 1)
      DEF SEG = &HA000  'vga hardware address
      c = c + 1
      IF c = 1 THEN
         c = c + 1
         IF pix1 <> TColor THEN POKE j * 320 + i, pix1
      ELSE
        c = 0
        ic = ic + 2
        IF pix2 <> TColor THEN POKE j * 320 + i, pix2
      END IF
  NEXT i
NEXT j
END SUB

