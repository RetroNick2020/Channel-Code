10 DIM RCODE%(22),VGACODE%(3),IM%(8444)
20 'rcode, Data Count = 22, asm code for setrgb function
21 RCODE%(0)=&H8B55:RCODE%(1)=&H8BEC:RCODE%(2)=&H0C76:RCODE%(3)=&H1C8A:RCODE%(4)=&H3C8A
22 RCODE%(5)=&H10B4:RCODE%(6)=&H00B0:RCODE%(7)=&H10CD:RCODE%(8)=&H10B4:RCODE%(9)=&H10B0
23 RCODE%(10)=&H1C8B:RCODE%(11)=&H768B:RCODE%(12)=&H8A0A:RCODE%(13)=&H8B34:RCODE%(14)=&H0876
24 RCODE%(15)=&H2C8A:RCODE%(16)=&H768B:RCODE%(17)=&H8A06:RCODE%(18)=&HCD0C:RCODE%(19)=&H5D10
25 RCODE%(20)=&H08CA:RCODE%(21)=&H0000
30 'vgacode, Data Count = 3, asm to change screen mode to 640x480x16
35 VGACODE%(0)=&H12B8:VGACODE%(1)=&HCD00:VGACODE%(2)=&HCB10
40 SCREEN 9  '640x350x16
50 VGAMODE=VARPTR(VGACODE%(0)):CALL VGAMODE
60 POKE 1778,223:POKE 1779,1 'patch the screen height descriptor to allow height up to  480
70 BLOAD "image1.bsv",VARPTR(IM%(0))
80 PUT(0,0),IM%
90 LINE(0,345)-(639,479),1,BF
100 FOR C%=0 to 15
110   READ R%,G%,B%
120   SETRGB=VARPTR(RCODE%(0)):CALL SETRGB(C%,R%,G%,B%)
121   'OUT &H3C8, C%   ' Point to color
122   'OUT &H3C9, R%   ' Send RGB values
123   'OUT &H3C9, G%   ' using out's to set color values works in screen 13
124   'OUT &H3C9, B%
130 NEXT
140 END
2000 'rgb values
2010 DATA 0, 0, 0
2020 DATA 63, 0, 0
2030 DATA 21, 0, 0
2040 DATA 42, 0, 0
2050 DATA 0, 21, 0
2060 DATA 63, 21, 0
2070 DATA 63, 42, 21
2080 DATA 63, 63, 42
2090 DATA 42, 42, 42
2100 DATA 63, 21, 21
2110 DATA 42, 21, 21
2120 DATA 21, 21, 21
2130 DATA 21, 21, 0
2140 DATA 21, 21, 42
2150 DATA 21, 42, 0
2160 DATA 63, 63, 63
3000 'find screen height descriptor and patch it - not used in program 
3010 FOR I=0 TO 65535!
3020   IF PEEK(I)=93 AND PEEK(I+1)=1 AND PEEK(I+6)=127 AND PEEK(I+7)=2 THEN POKE I,223: RETURN
3030   'LOCATE 21,1: PRINT I;"    ";
3040 NEXT 
3040 RETURN

